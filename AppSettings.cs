// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using NoIPUpdateTool;
//
//    var appSettings = AppSettings.FromJson(jsonString);

namespace NoIPUpdateTool
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class AppSettings
    {
        [JsonProperty("hosts")]
        public string[] Hosts { get; set; }

        [JsonProperty("interval")]
        public long Interval { get; set; }

        [JsonProperty("username")]
        public string Username { get; set; }

        [JsonProperty("password")]
        public string Password { get; set; }

        [JsonProperty("lastIp4")]
        public string LastIp4 { get; set; }

        [JsonProperty("lastIp6")]
        public string LastIp6 { get; set; }

        [JsonProperty("useIp6")]
        public bool UseIp6 { get; set; }

    }

    public partial class AppSettings
    {
        public static AppSettings FromJson(string json) => JsonConvert.DeserializeObject<AppSettings>(json, NoIPUpdateTool.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this AppSettings self) => JsonConvert.SerializeObject(self, NoIPUpdateTool.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Formatting = Formatting.Indented,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
